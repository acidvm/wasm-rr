name: Documentation

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for documentation changes
        uses: dorny/paths-filter@v2
        id: docs-changes
        with:
          filters: |
            docs:
              - 'docs/**'
              - 'docs/book.toml'
              - 'flake.nix'
              - '.github/workflows/docs.yml'
              - 'README.md'
              - 'AGENTS.md'
              - 'CLAUDE.md'
              - '**/CLAUDE.md'
              - '**/AGENTS.md'

      - name: Install Nix
        # Build if: PR closed event OR docs changed OR push to main
        if: github.event.action != 'closed' && (steps.docs-changes.outputs.docs == 'true' || github.event_name == 'push')
        uses: DeterminateSystems/nix-installer-action@main

      - name: Build documentation
        # Build if: PR closed event OR docs changed OR push to main
        if: github.event.action != 'closed' && (steps.docs-changes.outputs.docs == 'true' || github.event_name == 'push')
        run: |
          nix build .#docs
          cp -r result docs-output

      - name: Upload artifact
        # Upload if: PR closed event OR docs changed OR push to main
        if: github.event.action != 'closed' && (steps.docs-changes.outputs.docs == 'true' || github.event_name == 'push')
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs-output

      - name: Deploy PR preview
        # Deploy preview if: PR AND (docs changed OR PR closing)
        if: github.event_name == 'pull_request' && (steps.docs-changes.outputs.docs == 'true' || github.event.action == 'closed')
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./docs-output

  deploy:
    # Only deploy on main branch pushes
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
