name: Documentation

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        if: github.event.action != 'closed'
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Nix cache
        if: github.event.action != 'closed'
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Generate CLI reference documentation
        if: github.event.action != 'closed'
        run: |
          nix develop --command bash -c "./docs/build-cli-docs.sh"

      - name: Build documentation
        if: github.event.action != 'closed'
        run: |
          nix develop --command bash -c "cd docs && mdbook build"

      - name: Upload artifact
        if: github.event.action != 'closed'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/book

      - name: Deploy PR preview
        if: github.event_name == 'pull_request'
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./docs/book

  deploy:
    # Only deploy on main branch pushes
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
